module realworld.chapter2.FunctionsOverCompositeTypes where

import util.Assertions(assert)

-- a replacement for the missing "readFile" function, including the type
readFile :: String -> IO [String]
readFile fileName = do
    file <- openReader fileName
    file.getLines

main _ = do
    assert (take 2 [1,2,3,4,5])   [1,2]   "take from a list"
    assert (drop 3 [1,2,3,4,5])   [4,5]   "drop from a list"

    assert (fst (1,'a'))          1       "first of a pair"
    assert (snd (1,'a'))          'a'     "second of a pair"

    assert (head (drop 4 (unpacked "azerty")))  't'  "passing an expression to a function"

    assert (lines "the quick\nbrown fox")       ["the quick", "brown fox"]    "type: lines :: String -> [String]"

    readFile "/data.txt"
    return ()
