module realworld.chapter1.Arithmetic where

-- a replacement for using the GHCI repl to better capture the examples in one place

import frege.prelude.Math(**) -- we need this for the ** power operator

main _ = do
    println ( 2 + 2 )
    println ( (+) 2 2 )
    println ( 31337 * 101 )
    println ( 7.0 / 2.0 )
    println ( 313 ** 15 )   -- returns double, not BigInteger, there is no ^ operation
    println ( -3 )
    println ( 2 + -3 )      -- unlike haskell, this will work!
    println ( 2 + (-3) )
    println ( 3 + (-(13 * 37)) )
    println ( 2 * 3 )
    println ( 2 * -3 )      -- unlike haskell, this will work!
--    println ( 2 *-3 )     -- just like haskell, this will fail since the parser is greedy
    println ( 2 *(-3) )